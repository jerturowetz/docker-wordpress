version: '3.3'

services:

  adminer:
    image: adminer
    restart: always
    environment:
      - ADMINER_DEFAULT_SERVER=mysql
    ports:
      - 9000:8080
    labels:
      - 'traefik.backend=adminer'
      - 'traefik.port=9000'

  mysql:
    image: mysql:5.7
    restart: always
    volumes:
      - db_data:/var/lib/mysql
      - ./.docker/mysql:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: wordpress

  wordpress:
    image: jerturowetz/wordpress
    depends_on:
       - mysql
    restart: always
    volumes:
      - wordpress:/var/www/html
      - ./wp-content/themes/_s:/var/www/html/wp-content/themes/_s
      - ./wp-content/uploads:/var/www/html/wp-content/uploads
      - ./.docker/wp-cli:/var/www/html/wp-cli
    environment:
      WORDPRESS_DB_PASSWORD: password
      WORDPRESS_CONFIG_EXTRA: |
        define( 'WP_CACHE', 0 );
        define( 'WP_POST_REVISIONS', 0 );
        define( 'WP_MEMORY_LIMIT', '128M' );
        define( 'WP_MAX_MEMORY_LIMIT', '512M' );
        define( 'WP_DEBUG', 1 );
        define( 'WP_DEBUG_DISPLAY', 1 );
        define( 'WP_DEBUG_LOG', 1 );
        define( 'SCRIPT_DEBUG', 1 );
        define( 'CONCATENATE_SCRIPTS', 0 );
        define( 'JETPACK_DEV_DEBUG', 1 );
    labels:
      - 'traefik.wordpress.backend=wordpress'
      - 'traefik.wordpress.port=80'
      - 'traefik.wordpress.frontend.rule=Host:yoursite.develop'

  wp-cli:
    # image: jerturowetz/wordpress:cli
    image: wordpress:cli
    # build: .docker/wp-cli-image/.
    user: '1000:1000'
    volumes:
      - wordpress:/var/www/html
      - ./wp-content/themes/_s:/var/www/html/wp-content/themes/_s
      - ./wp-content/uploads:/var/www/html/wp-content/uploads
      - ./.docker/wp-cli:/var/www/html/wp-cli
    environment:
      WORDPRESS_DB_PASSWORD: password

  composer-plugins:
    image: composer
    volumes:
      - wordpress:/app
      - ./.docker/composer-plugins/plugins.json:/app/composer.json
    command: composer install

  traefik:
    image: traefik
    command: -c /dev/null --web --docker --logLevel=INFO
    ports:
      - 80:80
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  db_data:
  wordpress:
